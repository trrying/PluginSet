apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven'


Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

//使用： classpath '${group}:${project.archivesBaseName}:${version}'
group = gradle.groupIdName
project.archivesBaseName = gradle.artifactIdName
version = gradle.versionName

def bintrayPkgRepo = "component-register"
def bintrayPkgName = "component-register"
def bintrayPkgDes = "component register"

def siteUrl = 'https://github.com/trrying/PluginSet'
def gitUrl = 'https://github.com/trrying/PluginSet.git'
def issueUrl = 'https://github.com/trrying/PluginSet/issues'


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

ext {
    pomFilePath = "${project.buildDir.absolutePath}/tmp/pom.xml"
    pomFile = file(pomFilePath)
}

configurations {
    pom
}

artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
    if (pomFile.exists()) {
        pom pomFile
    }
}

task signJars(type: Sign, dependsOn: [jar, javadocJar, sourceJar]) {
    sign configurations.archives
}

task signPom(type: Sign) {
    sign configurations.pom
}

if (project.ext.pomFile.exists()) {
    task preparePublication(dependsOn: [signJars, signPom])
} else {
    task preparePublication(dependsOn: signJars)
}

def getPomSignature = {
    return project.tasks.signPom.signatureFiles.collect{ it }[0]
}

install {
    repositories.mavenInstaller {
// generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                name 'The Android Plugin for Totcy.'
                url siteUrl

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        // bintray用户名账户
                        id properties.getProperty("bintray.id")
                        // 用户名
                        name properties.getProperty("bintray.name")
                        // 邮箱
                        email properties.getProperty("bintray.email")
                    }
                }

                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = bintrayPkgRepo //bintray 上面 Package名字
        name = bintrayPkgName //bintray 上面项目名
        desc = bintrayPkgDes //bintray 上面项目描述
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        issueTrackerUrl = issueUrl
        licenses = ["Apache-2.0"]
        labels = 'Groovy'
        publicDownloadNumbers = true
        publish = true
    }
}
